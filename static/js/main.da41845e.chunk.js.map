{"version":3,"sources":["App.module.css","store/actions.ts","store/selectors.ts","CurrencyExchange.tsx","CurrencyExchangeContainer.tsx","App.tsx","reportWebVitals.ts","store/currencyReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","ChangeCurrencyFieldAC","amountOfBYN","amountOfCurrency","type","CHANGE_CURRENCY_FIELD_TYPE","payload","ChangeActionAC","isBuying","CHANGE_CHANGE_ACTION","selectAllState","state","currency","CurrencyExchange","currenciesName","currentCurrency","currencyRate","changeCurrencyField","changeAction","changeCurrentCurrency","viewCurrency","value","data-currency","onChange","className","s","currencyNames","map","index","currencies","activeCurrency","onClick","currencyAction","active","data-action","fields","CurrencyExchangeContainer","dispatch","useDispatch","useSelector","currencyName","buyRate","sellRate","e","currentTarget","isFinite","dataset","trigger","Number","toFixed","action","CHANGE_CURRENT_CURRENCY","ChangeCurrentCurrencyAC","App","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da41845e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3yc8M\",\"currency\":\"App_currency__2zf65\",\"currencyNames\":\"App_currencyNames__1KbW_\",\"currencyAction\":\"App_currencyAction__2IORu\",\"active\":\"App_active__3qUfu\",\"currencies\":\"App_currencies__nqvve\",\"activeCurrency\":\"App_activeCurrency__2cLKR\",\"fields\":\"App_fields__LmvC7\"};","export enum ACTIONS_TYPE {\r\n    CHANGE_CURRENCY_FIELD_TYPE = 'CurrencyExchange/CHANGE_CURRENCY_FIELD_TYPE',\r\n    CHANGE_CHANGE_ACTION = 'CurrencyExchange/CHANGE_CHANGE_ACTION',\r\n    CHANGE_CURRENT_CURRENCY = 'CurrencyExchange/CHANGE_CURRENT_CURRENCY',\r\n}\r\n\r\n\r\nexport type ChangeCurrencyFieldType = {\r\n    type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE\r\n    payload: {\r\n        amountOfBYN: string\r\n        amountOfCurrency: string\r\n    }\r\n};\r\n\r\nexport const ChangeCurrencyFieldAC = (amountOfBYN: string, amountOfCurrency: string): ChangeCurrencyFieldType => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE,\r\n        payload: {amountOfBYN, amountOfCurrency,},\r\n    }\r\n};\r\n\r\nexport type ChangeAction = {\r\n    type: ACTIONS_TYPE.CHANGE_CHANGE_ACTION\r\n    payload: {\r\n        isBuying: boolean\r\n    }\r\n};\r\n\r\nexport const ChangeActionAC = (isBuying: boolean): ChangeAction => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_CHANGE_ACTION,\r\n        payload: {isBuying,},\r\n    }\r\n};\r\n\r\nexport type ChangeCurrentCurrencyType = {\r\n    type: ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY\r\n    payload: {\r\n        currentCurrency: string\r\n    }\r\n};\r\n\r\nexport const ChangeCurrentCurrencyAC = (currentCurrency: string): ChangeCurrentCurrencyType => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY,\r\n        payload: {currentCurrency,},\r\n    }\r\n};\r\n\r\nexport type CurrencyReducersTypes = ChangeCurrencyFieldType | ChangeAction | ChangeCurrentCurrencyType;","import {IGlobalState} from './store';\r\n\r\nexport const selectAllState = (state: IGlobalState) => state.currency","import React from 'react';\r\nimport s from './App.module.css'\r\n\r\ntype CurrencyExchangePropsType = {\r\n    currenciesName: string[];\r\n    currentCurrency: string;\r\n    currencyRate: number;\r\n    isBuying: boolean;\r\n    amountOfBYN: string;\r\n    amountOfCurrency: string;\r\n    changeCurrencyField: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    changeAction: (e: React.MouseEvent<HTMLSpanElement>) => void;\r\n    changeCurrentCurrency: (e: React.MouseEvent<HTMLLIElement>) => void;\r\n};\r\n\r\nexport const CurrencyExchange: React.FC<CurrencyExchangePropsType> = ({\r\n                                                                          currenciesName,\r\n                                                                          currentCurrency,\r\n                                                                          currencyRate,\r\n                                                                          isBuying,\r\n                                                                          amountOfBYN,\r\n                                                                          amountOfCurrency,\r\n                                                                          changeCurrencyField,\r\n                                                                          changeAction,\r\n                                                                          changeCurrentCurrency,\r\n                                                                      }) => {\r\n    const viewCurrency =\r\n        isBuying\r\n            ? (\r\n                <>\r\n                    <label>\r\n                        You give the next amount of BYN:\r\n                        <input value={amountOfBYN} data-currency=\"byn\" onChange={changeCurrencyField}/>\r\n                    </label>\r\n                    <label>\r\n                        You get the next amount of {currentCurrency}:\r\n                        <input value={amountOfCurrency} data-currency=\"currency\" onChange={changeCurrencyField}/>\r\n                    </label>\r\n                </>\r\n            )\r\n            : (\r\n                <>\r\n                    <label>\r\n                        You give the next amount of {currentCurrency}:\r\n                        <input value={amountOfCurrency} data-currency=\"currency\" onChange={changeCurrencyField}/>\r\n                    </label>\r\n                    <label>\r\n                        You get the next amount of BYN:\r\n                        <input value={amountOfBYN} data-currency=\"byn\" onChange={changeCurrencyField}/>\r\n                    </label>\r\n                </>\r\n            );\r\n\r\n    return (\r\n        <div className={s.currency}>\r\n            <h2>Currency exchange</h2>\r\n            <div className={s.currencyNames}>\r\n                <p>Current currency:</p>\r\n                <ul>\r\n                    {currenciesName.map((currency: string, index: number) => {\r\n                        return (\r\n                            <li\r\n                                key={`${index}-${currency}`}\r\n                                className={`${s.currencies} ${currentCurrency === currency ? `${s.activeCurrency}` : null}`}\r\n                                onClick={changeCurrentCurrency}\r\n                                data-currency={currency}\r\n                            >\r\n                                {currency}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className={s.currencyAction}>\r\n        <span className={isBuying ? `${s.active}` : ''} data-action=\"buy\" onClick={changeAction}>\r\n          Buy\r\n        </span>\r\n                <span className={isBuying ? '' : `${s.active}`} data-action=\"sell\" onClick={changeAction}>\r\n          Sell\r\n        </span>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <p>Currency rate: {currencyRate}</p>\r\n                {viewCurrency}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\nimport {ChangeActionAC, ChangeCurrencyFieldAC, ChangeCurrentCurrencyAC, CurrencyReducersTypes} from './store/actions';\r\nimport {selectAllState} from './store/selectors';\r\nimport {CurrencyType} from './store/currencyReducer';\r\nimport {CurrencyExchange} from './CurrencyExchange';\r\n\r\nexport const CurrencyExchangeContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>()\r\n    const {currencies, currentCurrency, isBuying, amountOfBYN, amountOfCurrency} = useSelector(selectAllState)\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport s from './App.module.css';\nimport {CurrencyExchangeContainer} from './CurrencyExchangeContainer';\n\nfunction App() {\n    return (\n        <div className={s.container}>\n            <CurrencyExchangeContainer/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ACTIONS_TYPE, CurrencyReducersTypes} from './actions';\r\n\r\n\r\nexport type CurrencyType = {\r\n    currencyName: string;\r\n    buyRate: number;\r\n    sellRate: number;\r\n};\r\nexport type CurrencyState = {\r\n    currencies: Array<CurrencyType>;\r\n    currentCurrency: string;\r\n    isBuying: boolean;\r\n    amountOfBYN: string;\r\n    amountOfCurrency: string;\r\n};\r\n\r\nconst initialState: CurrencyState = {\r\n    currencies: [\r\n        {\r\n            currencyName: 'USD',\r\n            buyRate: 2.62,\r\n            sellRate: 2.58,\r\n        },\r\n        {\r\n            currencyName: 'EUR',\r\n            buyRate: 3.1,\r\n            sellRate: 3.06,\r\n        },\r\n        {\r\n            currencyName: 'RUR',\r\n            buyRate: 0.0345,\r\n            sellRate: 0.0341,\r\n        },\r\n    ],\r\n    currentCurrency: 'USD',\r\n    isBuying: true,\r\n    amountOfBYN: '',\r\n    amountOfCurrency: '',\r\n};\r\n\r\nexport const currencyReducer = (state: CurrencyState = initialState, action: CurrencyReducersTypes): CurrencyState => {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        case ACTIONS_TYPE.CHANGE_CHANGE_ACTION:\r\n        case ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                amountOfBYN: '',\r\n                amountOfCurrency: '',\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { currencyReducer } from './currencyReducer';\r\nimport {combineReducers, createStore} from 'redux';\r\n\r\nconst reducers = combineReducers({\r\n    currency: currencyReducer,\r\n});\r\nexport type IGlobalState = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}